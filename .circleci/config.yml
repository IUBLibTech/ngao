# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1
  ruby: circleci/ruby@2

default_environment: &default_environment
  RAILS_ENV: test
  RACK_ENV: test
  FCREPO_TEST_PORT: 8080/fcrepo
  BUNDLE_JOBS: 4
  BUNDLE_RETRY: 3
  NOKOGIRI_USE_SYSTEM_LIBRARIES: true
  ENGINE_CART_RAILS_OPTIONS: --skip-git --skip-bundle --skip-listen --skip-spring --skip-yarn --skip-keeps --skip-action-cable --skip-coffee --skip-puma --skip-test
  SPEC_OPTS: --profile 10 --format RspecJunitFormatter --out /tmp/test-results/rspec.xml --format progress
  COVERALLS_PARALLEL: true
  WD_INSTALL_DIR: ./webdriver
  SOLR_URL: http://localhost:8983/solr/blacklight-core

jobs:
  build:
    docker:
    # legacy needed for phantomjs
    - image: cimg/ruby:2.7-browsers
    - image: iublibtech/archives_online:solr8

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      <<: *default_environment

    steps:
    - browser-tools/install-chrome
    - browser-tools/install-chromedriver
    - run:
        command: |
          google-chrome --version
          chromedriver --version
        name: Check install
    - restore_cache:
        keys:
        - source-v1-{{ .Branch }}-{{ .Revision }}
        - source-v1-{{ .Branch }}-
        - source-v1-

    - checkout

    - save_cache:
        key: source-v1-{{ .Branch }}-{{ .Revision }}
        paths:
        - ".git"

    # BUNDLE_PATH is unset to allow for `bundle config path` to take precedence.
    - run:
        name: Extra environment setup
        command: |
          echo 'unset BUNDLE_PATH' >> $BASH_ENV

    - run:
        name: Install system deps
        command: |
          sudo apt-get update -qq
          sudo apt-get install -y build-essential libpq-dev nodejs

      # Our custom Solr image already has the config saved as 'myconfig', we just need to create a core from it
    - run:
        name: Load config into Solr
        command: |
          curl "http://localhost:8983/solr/admin/cores?action=CREATE&name=blacklight-core&configSet=myconfig"

    # Download and cache dependencies
    - restore_cache:
        keys:
        - dependencies-v3-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
        - dependencies-v3-{{ .Branch }}
        - dependencies-v3-

    - run:
        name: Install dependencies
        command: |
          gem update --system
          gem update bundler
          bundle config path $CIRCLE_WORKING_DIRECTORY/vendor/bundle
          bundle install
          bundle pristine webdrivers
          bundle clean
          bundle exec rails webdrivers:chromedriver:update

    - save_cache:
        paths:
        - ./vendor/bundle
        - ./webdriver
        key: dependencies-v3-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

#    - run:
#        name: Call Rubocop
#        command: bundle exec rubocop

    #- run:
    #    name: Start headless Chrome
    #    command: google-chrome-stable --headless --disable-gpu --no-sandbox --remote-debugging-port=9222 http://localhost
    #    background: true

    - run:
        name: Run rspec in parallel
        command: |
          mkdir /tmp/test-results
          RAILS_ENV=test bundle exec rake db:migrate
          bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

    # - run:
    #    name: Run javascript tests
    #    command: bundle exec rake spec:javascript



    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results
